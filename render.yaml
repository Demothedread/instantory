services:
  # Define the main web service
  - type: web
    name: instantory-api
    runtime: python
    buildCommand: pip install -r requirements.txt
    startCommand: PYTHONPATH=$PYTHONPATH:. python -m backend.server
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: DATABASE_URL
        fromDatabase:
          name: instantory-db
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: STORAGE_TYPE
        value: vercel_blob
      - key: CORS_ORIGINS
        value: https://instantory.vercel.app
      - key: SECRET_KEY
        generateValue: true
      # Added required variables from .env.example
      - key: BLOB_READ_WRITE_TOKEN
        sync: false
      - key: JWT_SECRET
        generateValue: true
      - key: SESSION_SECRET
        generateValue: true
      - key: COOKIE_SECRET
        generateValue: true
      - key: PUBLIC_BACKEND_URL
        value: https://instantory-api.onrender.com
      - key: VERCEL_URL
        value: https://instantory.vercel.app
      # Data directories
      - key: DATA_DIR
        value: ./data
      - key: UPLOADS_DIR
        value: ./data/uploads
      - key: INVENTORY_IMAGES_DIR
        value: ./data/images/inventory
      - key: EXPORTS_DIR
        value: ./data/exports
      - key: DOCUMENT_DIRECTORY
        value: ./data/documents
      # Logging
      - key: LOG_LEVEL
        value: info
      
  # Optional worker configuration - disabled by default
  # Uncomment and customize if needed for background tasks
  # - type: worker
  #   name: instantory-worker
  #   runtime: python
  #   buildCommand: pip install -r requirements.txt
  #   startCommand: cd backend && python worker.py
  #   envVars:
  #     - key: DATABASE_URL
  #       fromDatabase:
  #         name: instantory-db
  #         property: connectionString

# Define the database
databases:
  - name: instantory-db
    plan: starter
    ipAllowList: []
